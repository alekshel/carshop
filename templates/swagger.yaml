openapi: 3.0.3
info:
  title: CarShop - OpenAPI 3.0
  description: |-
    CarShop Api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: token
    description: Get token
  - name: catalog
    description: Get dealerships, car_types, cars
  - name: cart
    description: Cart operations
  - name: order
    description: Order operations
servers:
  - url: /api
paths:
  /token/:
    post:
      tags:
        - token
      summary: Get auth token
      description: Get auth token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Name of your account
                password:
                  type: string
                  description: Password of your account
              required:
                - username
                - password
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                items:
                  $ref: '#/components/schemas/Token'
        '400':
          description: Uncorrected username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenError'
  /dealerships/:
    get:
      tags:
        - catalog
      summary: Get dealerships
      description: Get dealerships
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dealership'
  /car_types/{dealer_id}/:
    get:
      tags:
        - catalog
      summary: Get car_types
      description: Get car_types
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarType'
  /cars/{car_type_id}/:
    get:
      tags:
        - catalog
      summary: Get cars
      description: Get cars
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
  /cart/:
    get:
      tags:
        - cart
      summary: Get cart
      description: Get cart
      security:
        - Token: [ ]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
  /cart/{car_id}/:
    post:
      tags:
        - cart
      summary: Add car to cart
      description: Add car to cart
      security:
        - Token: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  dealership_id:
                    type: integer
                    example: 1
                  car_type_id:
                    type: integer
                    example: 1
        '404':
          description: Car not found
    delete:
        tags:
            - cart
        summary: Delete car from cart
        description: Delete car from cart
        security:
            - Token: []
        responses:
          204:
            description: successful operation
  /order/:
    post:
      tags:
        - order
      summary: Pay order
      description: Pay order
      security:
        - Token: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                properties:
                  cars_license:
                    $ref: '#/components/schemas/OrderPay'
    delete:
      tags:
        - order
      summary: Delete order
      description: Delete order
      security:
        - Token: []
      responses:
        204:
          description: successful operation
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
          example: 1234567890
    Dealership:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Київ АвтоСервіс
    CarType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Пассат
        photo:
          type: string
          example: http://
        brand:
          type: string
          example: Volkswagen
        price:
          type: integer
          example: 100000
    Car:
      type: object
      properties:
        id:
          type: integer
          example: 1
        color:
          type: string
          example: #ffffff
        year:
          type: integer
          example: 2011
        car_type:
          type: integer
          example: 1
    Cart:
      type: object
      properties:
        order_sum:
          type: integer
          example: 100000
        cars:
          type: array
          items:
            $ref: '#/components/schemas/Car'
    OrderPay:
        type: object
        properties:
          car:
            type: string
            example: Пассат
          number:
            type: string
            example: АН 1234 АН
    TokenError:
      type: object
      properties:
        non_field_errors:
          type: string
          example: Неможливо зайти з введеними даними